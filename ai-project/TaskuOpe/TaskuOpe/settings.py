"""
Django settings for TaskuOpe project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
import environ

#Alusta ympäristömuuttujien käsittely
env = environ.Env(
    DEBUG=(bool, False),
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Lataa .env tiedosto, jos se on olemassa
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

SECRET_KEY = env('SECRET_KEY')
DEBUG = env('DEBUG')
ALLOWED_HOSTS = ['taskuope-bqlib.ondigitalocean.app', 'localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Project apps
    'users.apps.UsersConfig',
    'materials.apps.MaterialsConfig',

    'imagekit',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware', #Message framework
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # WhiteNoise middleware
]

ROOT_URLCONF = 'TaskuOpe.urls'

# ==============================================================================
# TEMPLATES
# ==============================================================================
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'TaskuOpe.wsgi.application'


# settings.py

DATABASES = {
    # Lue DATABASE_URL ympäristömuuttujasta (käytetään tuotannossa).
    # Jos DATABASE_URL ei löydy, käytä oletuksena paikallista sqlite-tietokantaa.
    'default': env.db('DATABASE_URL', default=f'sqlite:///{BASE_DIR / "db.sqlite3"}')
}

# Lisää SSL-vaatimus VAIN, jos käytössä on PostgreSQL (eli DATABASE_URL löytyi)
if DATABASES['default']['ENGINE'] == 'django.db.backends.postgresql':
    DATABASES['default']['OPTIONS'] = {'sslmode': 'require'}


# Password validation
AUTH_PASSWORD_VALIDATORS = [
]


# Internationalization
LANGUAGE_CODE = 'fi'
TIME_ZONE = 'Europe/Helsinki'
USE_I18N = True
USE_TZ = True


# ==============================================================================
# STATIC FILES
# ==============================================================================
STATIC_URL = 'static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whiteNoise.storage.CompressedManifestStaticFilesStorage'
STATICFILES_DIRS = [
    BASE_DIR / 'TaskuOpe' / 'static',
]

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model & Login URLs
AUTH_USER_MODEL = 'users.CustomUser'
LOGIN_URL = "kirjaudu"
LOGIN_REDIRECT_URL = "dashboard" 
LOGOUT_REDIRECT_URL = "kirjaudu"
MEDIA_ROOT = BASE_DIR / 'media'
#MEDIA_URL = '/media/' #Lisäsin tämän kun halusin saada admin.py toimimaan lokaalissa -Mirka

# DigitalOcean Spaces -asetukset mediatiedostoille
if not DEBUG:
    AWS_ACCESS_KEY_ID = env('DO_SPACES_ACCESS_KEY')
    AWS_SECRET_ACCESS_KEY = env('DO_SPACES_SECRET_KEY')
    AWS_STORAGE_BUCKET_NAME = env('DO_SPACES_BUCKET_NAME')
    DO_SPACES_REGION = env('DO_SPACES_REGION') # Lue region muuttujaan
    AWS_S3_ENDPOINT_URL = f"https://{DO_SPACES_REGION}.digitaloceanspaces.com" # Käytä muuttujaa
    AWS_S3_OBJECT_PARAMETERS = {
        'CacheControl': 'max-age=86400',
    }
    AWS_LOCATION = 'media'
    AWS_DEFAULT_ACL = None
    AWS_QUERYSTRING_AUTH = False
    
    STORAGES = {
        "default": {
            "BACKEND": "storages.backends.s3.S3Storage",
        },
        "staticfiles": {
             "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
        },
    }
    
    MEDIA_URL = f'{AWS_S3_ENDPOINT_URL}/{AWS_LOCATION}/'